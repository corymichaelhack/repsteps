{"remainingRequest":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js!/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/coryhack/repSteps-recorder/src/popup/PopupApp.vue?vue&type=template&id=70ab1817","dependencies":[{"path":"/Users/coryhack/repSteps-recorder/src/popup/PopupApp.vue","mtime":1644509911127},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js","mtime":1643048371203},{"path":"/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643048377068},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1643048376026}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgdlNob3cgYXMgX3ZTaG93LCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCB3aXRoQ3R4IGFzIF93aXRoQ3R4IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJiZy1ncmF5LWxpZ2h0ZXN0IGRhcms6YmctYmxhY2sgZmxleCBmbGV4LWNvbCBvdmVyZmxvdy1oaWRkZW4iCn07CnZhciBfaG9pc3RlZF8yID0gewogICJkYXRhLXRlc3QtaWQiOiAicmVzdWx0cy1mb290ZXIiLAogIGNsYXNzOiAiZmxleCBweS0yIHB4LTMganVzdGlmeS1iZXR3ZWVuIGJnLWJsYWNrLXNoYWR5Igp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpbWciLCB7CiAgc3JjOiAiL2ljb25zL2Rhcmsvc3luYy5zdmciLAogIGNsYXNzOiAibXItMSIsCiAgYWx0OiAicmVzdGFydCByZWNvcmRpbmciCn0sIG51bGwsIC0xKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBSZXN0YXJ0ICIpOwoKdmFyIF9ob2lzdGVkXzUgPSB7CiAgc3JjOiAiL2ljb25zL2RhcmsvZHVwbGljYXRlLnN2ZyIsCiAgY2xhc3M6ICJtci0xIiwKICBhbHQ6ICJjb3B5IGNvZGUgdG8gY2xpcGJvYXJkIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfJGRhdGEkb3B0aW9ucywgXyRkYXRhJG9wdGlvbnMkZXh0ZW5zOwoKICB2YXIgX2NvbXBvbmVudF9IZWFkZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiSGVhZGVyIik7CgogIHZhciBfY29tcG9uZW50X0hvbWUgPSBfcmVzb2x2ZUNvbXBvbmVudCgiSG9tZSIpOwoKICB2YXIgX2NvbXBvbmVudF9SZWNvcmRpbmcgPSBfcmVzb2x2ZUNvbXBvbmVudCgiUmVjb3JkaW5nIik7CgogIHZhciBfY29tcG9uZW50X1Jlc3VsdHMgPSBfcmVzb2x2ZUNvbXBvbmVudCgiUmVzdWx0cyIpOwoKICB2YXIgX2NvbXBvbmVudF9CdXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiQnV0dG9uIik7CgogIHZhciBfY29tcG9uZW50X0Zvb3RlciA9IF9yZXNvbHZlQ29tcG9uZW50KCJGb290ZXIiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfSGVhZGVyLCB7CiAgICBvbk9wdGlvbnM6ICRvcHRpb25zLm9wZW5PcHRpb25zLAogICAgb25EYXJrOiAkb3B0aW9ucy50b2dnbGVEYXJrTW9kZQogIH0sIG51bGwsIDgsIFsib25PcHRpb25zIiwgIm9uRGFyayJdKSwgISRkYXRhLnNob3dSZXN1bHRzVGFiICYmICEkZGF0YS5pc1JlY29yZGluZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0hvbWUsIHsKICAgIGtleTogMCwKICAgIG9uU3RhcnQ6ICRvcHRpb25zLnRvZ2dsZVJlY29yZAogIH0sIG51bGwsIDgsIFsib25TdGFydCJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZShfY29tcG9uZW50X1JlY29yZGluZywgewogICAgb25TdG9wOiAkb3B0aW9ucy50b2dnbGVSZWNvcmQsCiAgICBvblBhdXNlOiAkb3B0aW9ucy50b2dnbGVQYXVzZSwKICAgIG9uUmVzdGFydDogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5yZXN0YXJ0KHRydWUpOwogICAgfSksCiAgICAiaXMtcmVjb3JkaW5nIjogJGRhdGEuaXNSZWNvcmRpbmcsCiAgICAiaXMtcGF1c2VkIjogJGRhdGEuaXNQYXVzZWQsCiAgICAiZGFyay1tb2RlIjogKF8kZGF0YSRvcHRpb25zID0gJGRhdGEub3B0aW9ucykgPT09IG51bGwgfHwgXyRkYXRhJG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfJGRhdGEkb3B0aW9ucyRleHRlbnMgPSBfJGRhdGEkb3B0aW9ucy5leHRlbnNpb24pID09PSBudWxsIHx8IF8kZGF0YSRvcHRpb25zJGV4dGVucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogXyRkYXRhJG9wdGlvbnMkZXh0ZW5zLmRhcmtNb2RlCiAgfSwgbnVsbCwgOCwgWyJvblN0b3AiLCAib25QYXVzZSIsICJpcy1yZWNvcmRpbmciLCAiaXMtcGF1c2VkIiwgImRhcmstbW9kZSJdKSwgW1tfdlNob3csICEkZGF0YS5zaG93UmVzdWx0c1RhYiAmJiAkZGF0YS5pc1JlY29yZGluZ11dKSwgJGRhdGEuc2hvd1Jlc3VsdHNUYWIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9SZXN1bHRzLCB7CiAgICBrZXk6IDEsCiAgICByZXBTdGVwczogJGRhdGEuY29kZUZvclJlcFN0ZXBzLAogICAgb3B0aW9uczogJGRhdGEub3B0aW9ucywKICAgICJvblVwZGF0ZTp0YWIiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLmN1cnJlbnRSZXN1bHRUYWIgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDgsIFsicmVwU3RlcHMiLCAib3B0aW9ucyJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW193aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgIGRhcms6ICIiLAogICAgY2xhc3M6ICJtci0yIiwKICAgIG9uQ2xpY2s6ICRvcHRpb25zLnJlc3RhcnQKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfMywgX2hvaXN0ZWRfNF07CiAgICB9KSwKICAgIF86IDEKICB9LCA4LCBbIm9uQ2xpY2siXSksIFtbX3ZTaG93LCAkZGF0YS5jb2RlRm9yUmVwU3RlcHNdXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgIGRhcms6ICIiLAogICAgY2xhc3M6ICJtci0yIHctMzQiLAogICAgb25DbGljazogJG9wdGlvbnMuY29weUNvZGUKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW1nIiwgX2hvaXN0ZWRfNSwgbnVsbCwgNTEyKSwgW1tfdlNob3csICEkZGF0YS5pc0NvcHlpbmddXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInNwYW4iLCBudWxsLCAiQ29weSB0byBjbGlwYm9hcmQiLCA1MTIpLCBbW192U2hvdywgISRkYXRhLmlzQ29weWluZ11dKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgic3BhbiIsIG51bGwsICJDb3BpZWQhIiwgNTEyKSwgW1tfdlNob3csICRkYXRhLmlzQ29weWluZ11dKV07CiAgICB9KSwKICAgIF86IDEKICB9LCA4LCBbIm9uQ2xpY2siXSksIFtbX3ZTaG93LCAkZGF0YS5jb2RlRm9yUmVwU3RlcHNdXSldLCA1MTIpLCBbW192U2hvdywgJGRhdGEuc2hvd1Jlc3VsdHNUYWJdXSksICEkZGF0YS5pc1JlY29yZGluZyAmJiAhJGRhdGEuc2hvd1Jlc3VsdHNUYWIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9Gb290ZXIsIHsKICAgIGtleTogMgogIH0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoIiIsIHRydWUpXSk7Cn0="},{"version":3,"sources":["/Users/coryhack/repSteps-recorder/src/popup/PopupApp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"bg-gray-lightest dark:bg-black flex flex-col overflow-hidden\">\n    <Header @options=\"openOptions\" @dark=\"toggleDarkMode\" />\n\n    <Home v-if=\"!showResultsTab && !isRecording\" @start=\"toggleRecord\" />\n\n    <Recording\n      @stop=\"toggleRecord\"\n      @pause=\"togglePause\"\n      @restart=\"restart(true)\"\n      :is-recording=\"isRecording\"\n      :is-paused=\"isPaused\"\n      :dark-mode=\"options?.extension?.darkMode\"\n      v-show=\"!showResultsTab && isRecording\"\n    />\n\n    <Results\n      :repSteps=\"codeForRepSteps\"\n      :options=\"options\"\n      v-if=\"showResultsTab\"\n      v-on:update:tab=\"currentResultTab = $event\"\n    />\n\n    <!-- TODO: Move this into its own component -->\n    <div\n      data-test-id=\"results-footer\"\n      class=\"flex py-2 px-3 justify-between bg-black-shady\"\n      v-show=\"showResultsTab\"\n    >\n      <Button dark class=\"mr-2\" @click=\"restart\" v-show=\"codeForRepSteps\">\n        <img src=\"/icons/dark/sync.svg\" class=\"mr-1\" alt=\"restart recording\" />\n        Restart\n      </Button>\n      <Button dark class=\"mr-2 w-34\" @click=\"copyCode\" v-show=\"codeForRepSteps\">\n        <img\n          v-show=\"!isCopying\"\n          src=\"/icons/dark/duplicate.svg\"\n          class=\"mr-1\"\n          alt=\"copy code to clipboard\"\n        />\n        <span v-show=\"!isCopying\">Copy to clipboard</span>\n        <span v-show=\"isCopying\">Copied!</span>\n      </Button>\n    </div>\n\n    <Footer v-if=\"!isRecording && !showResultsTab\" />\n  </div>\n</template>\n\n<script>\nimport browser from '@/services/browser'\nimport storage from '@/services/storage'\n// import analytics from '@/services/analytics'\nimport { popupActions, isDarkMode } from '@/services/constants'\n\nimport CodeGenerator from '@/modules/code-generator'\n\nimport Home from '@/views/Home.vue'\nimport Results from '@/views/Results.vue'\nimport Recording from '@/views/Recording.vue'\n\nimport Button from '@/components/Button.vue'\nimport Footer from '@/components/Footer.vue'\nimport Header from '@/components/Header.vue'\n\nlet bus\n\nconst defaultOptions = {\n  extension: {\n    darkMode: isDarkMode(),\n  },\n  code: {},\n}\n\nexport default {\n  name: 'PopupApp',\n  components: {\n    Results,\n    Recording,\n    Home,\n    Header,\n    Footer,\n    Button,\n  },\n\n  data() {\n    return {\n      isLoggedIn: false,\n      showResultsTab: false,\n      isRecording: false,\n      isPaused: false,\n      isCopying: false,\n      currentResultTab: null,\n      liveEvents: [],\n      recording: [],\n      codeForRepSteps: '',\n      options: defaultOptions,\n    }\n  },\n\n  watch: {\n    'options.extension.darkMode': {\n      handler(newVal) {\n        document.body.classList[newVal ? 'add' : 'remove']('dark')\n      },\n      immediate: true,\n    },\n  },\n\n  async mounted() {\n    this.loadState()\n    bus = browser.getBackgroundBus()\n  },\n\n  methods: {\n    toggleRecord(close = true) {\n      if (this.isRecording) {\n        this.stop()\n      } else {\n        close && window.close()\n        this.start()\n      }\n\n      this.isRecording = !this.isRecording\n      this.storeState()\n    },\n\n    togglePause(stop = false) {\n      bus.postMessage({ action: this.isPaused ? popupActions.UN_PAUSE : popupActions.PAUSE, stop })\n      this.isPaused = !this.isPaused\n\n      this.storeState()\n    },\n\n    start() {\n      // analytics.trackEvent({ options: this.options, event: 'Start' })\n      this.cleanUp()\n      bus.postMessage({ action: popupActions.START })\n    },\n\n    async stop() {\n      // analytics.trackEvent({ options: this.options, event: 'Stop' })\n      bus.postMessage({ action: popupActions.STOP })\n\n      await this.generateCode()\n      this.storeState()\n    },\n\n    restart(stop = false) {\n      this.cleanUp()\n      bus.postMessage({ action: popupActions.CLEAN_UP, value: stop })\n    },\n\n    cleanUp() {\n      this.recording = this.liveEvents = []\n      this.codeForRepSteps = ''\n      this.showResultsTab = this.isRecording = this.isPaused = false\n      this.storeState()\n    },\n\n    async generateCode() {\n      const { recording, options = { code: {} } } = await storage.get(['recording', 'options'])\n      const generator = new CodeGenerator(options.code)\n      const { repSteps } = generator.generate(recording)\n\n      this.recording = recording\n      this.codeForRepSteps = repSteps\n      this.showResultsTab = true\n    },\n\n    openOptions() {\n      // analytics.trackEvent({ options: this.options, event: 'Options' })\n      browser.openOptionsPage()\n    },\n\n    async loadState() {\n      const {\n        controls = {},\n        options,\n        codeForRepSteps = '',\n        recording,\n        clear,\n        pause,\n        restart,\n      } = await storage.get([\n        'controls',\n        'options',\n        'codeForRepSteps',\n        'recording',\n        'clear',\n        'pause',\n        'restart',\n      ])\n\n      this.isRecording = controls.isRecording\n      this.isPaused = controls.isPaused\n      this.options = options || defaultOptions\n      this.codeForRepSteps = codeForRepSteps\n\n      if (this.isRecording) {\n        this.liveEvents = recording\n\n        if (clear) {\n          this.toggleRecord()\n          storage.remove(['clear'])\n        }\n\n        if (pause) {\n          this.togglePause(true)\n          storage.remove(['pause'])\n        }\n\n        if (restart) {\n          this.cleanUp()\n          this.toggleRecord(false)\n          storage.remove(['restart'])\n        }\n      } else if (this.codeForRepSteps) {\n        this.generateCode()\n      }\n    },\n\n    storeState() {\n      storage.set({\n        codeForRepSteps: this.codeForRepSteps,\n        controls: { isRecording: this.isRecording, isPaused: this.isPaused },\n      })\n    },\n\n    async copyCode() {\n      this.isCopying = true\n      await browser.copyToClipboard(this.getCode())\n      setTimeout(() => (this.isCopying = false), 500)\n    },\n\n    toggleDarkMode() {\n      this.options.extension.darkMode = !this.options.extension.darkMode\n      storage.set({ options: this.options })\n    },\n\n    getCode() {\n      return this.codeForRepSteps\n    },\n  },\n}\n</script>\n\n<style>\nhtml {\n  width: 386px;\n  height: 535px;\n}\n\nbutton:focus-visible {\n  outline: none;\n  box-shadow: 0 0 2px 2px #51a7e8;\n}\n\nbutton:focus {\n  outline: 0;\n}\n</style>\n"],"sourceRoot":""}]}