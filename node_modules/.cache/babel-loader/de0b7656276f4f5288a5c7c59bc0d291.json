{"remainingRequest":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js!/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/coryhack/repSteps-recorder/src/options/OptionsApp.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/coryhack/repSteps-recorder/src/options/OptionsApp.vue","mtime":1644510201202},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js","mtime":1643048371203},{"path":"/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1643048376026}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jb3J5aGFjay9yZXBTdGVwcy1yZWNvcmRlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbic7CmltcG9ydCBzdG9yYWdlIGZyb20gJ0Avc2VydmljZXMvc3RvcmFnZSc7CmltcG9ydCB7IGlzRGFya01vZGUgfSBmcm9tICdAL3NlcnZpY2VzL2NvbnN0YW50cyc7CmltcG9ydCB7IGRlZmF1bHRzIGFzIGNvZGUgfSBmcm9tICdAL21vZHVsZXMvY29kZS1nZW5lcmF0b3IvYmFzZS1nZW5lcmF0b3InOwppbXBvcnQgeyBtZXJnZSB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCBCdXR0b24gZnJvbSAnQC9jb21wb25lbnRzL0J1dHRvbic7CmltcG9ydCBUb2dnbGUgZnJvbSAnQC9jb21wb25lbnRzL1RvZ2dsZSc7CnZhciBkZWZhdWx0T3B0aW9ucyA9IHsKICBjb2RlOiBjb2RlLAogIGV4dGVuc2lvbjogewogICAgLy8gdGVsZW1ldHJ5OiB0cnVlLAogICAgZGFya01vZGU6IGlzRGFya01vZGUoKQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdPcHRpb25zQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBUb2dnbGU6IFRvZ2dsZSwKICAgIEJ1dHRvbjogQnV0dG9uCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdmVyc2lvbjogdmVyc2lvbiwKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgc2F2aW5nOiBmYWxzZSwKICAgICAgb3B0aW9uczogZGVmYXVsdE9wdGlvbnMsCiAgICAgIHJlY29yZGluZ0tleUNvZGVQcmVzczogZmFsc2UKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgb3B0aW9uczogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuc2F2ZSgpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9LAogICAgJ29wdGlvbnMuZXh0ZW5zaW9uLmRhcmtNb2RlJzogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG5ld1ZhbCkgewogICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0W25ld1ZhbCA/ICdhZGQnIDogJ3JlbW92ZSddKCdkYXJrJyk7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5sb2FkKCk7CiAgICBjaHJvbWUuc3RvcmFnZS5vbkNoYW5nZWQuYWRkTGlzdGVuZXIoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgdmFyIF9yZWYkb3B0aW9ucyA9IF9yZWYub3B0aW9ucywKICAgICAgICAgIG9wdGlvbnMgPSBfcmVmJG9wdGlvbnMgPT09IHZvaWQgMCA/IG51bGwgOiBfcmVmJG9wdGlvbnM7CgogICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm5ld1ZhbHVlLmV4dGVuc2lvbi5kYXJrTW9kZSAhPT0gX3RoaXMub3B0aW9ucy5leHRlbnNpb24uZGFya01vZGUpIHsKICAgICAgICBfdGhpcy5vcHRpb25zLmV4dGVuc2lvbi5kYXJrTW9kZSA9IG9wdGlvbnMubmV3VmFsdWUuZXh0ZW5zaW9uLmRhcmtNb2RlOwogICAgICB9CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIuc2F2aW5nID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHN0b3JhZ2Uuc2V0KHsKICAgICAgICAgICAgICAgICAgb3B0aW9uczogX3RoaXMyLm9wdGlvbnMKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5zYXZpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0sIDUwMCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2FkOiBmdW5jdGlvbiBsb2FkKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBfeWllbGQkc3RvcmFnZSRnZXQsIG9wdGlvbnM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmFnZS5nZXQoJ29wdGlvbnMnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJHN0b3JhZ2UkZ2V0ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBvcHRpb25zID0gX3lpZWxkJHN0b3JhZ2UkZ2V0Lm9wdGlvbnM7CiAgICAgICAgICAgICAgICBtZXJnZShkZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7CiAgICAgICAgICAgICAgICBfdGhpczMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIF90aGlzMy5vcHRpb25zLCBkZWZhdWx0T3B0aW9ucyk7CiAgICAgICAgICAgICAgICBfdGhpczMubG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsaXN0ZW5Gb3JLZXlDb2RlUHJlc3M6IGZ1bmN0aW9uIGxpc3RlbkZvcktleUNvZGVQcmVzcygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLnJlY29yZGluZ0tleUNvZGVQcmVzcyA9IHRydWU7CgogICAgICB2YXIga2V5RG93bkZ1bmN0aW9uID0gZnVuY3Rpb24ga2V5RG93bkZ1bmN0aW9uKGUpIHsKICAgICAgICBfdGhpczQucmVjb3JkaW5nS2V5Q29kZVByZXNzID0gZmFsc2U7CgogICAgICAgIF90aGlzNC51cGRhdGVLZXlDb2RlV2l0aE51bWJlcihlKTsKCiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBrZXlEb3duRnVuY3Rpb24sIGZhbHNlKTsKICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIH07CgogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGtleURvd25GdW5jdGlvbiwgZmFsc2UpOwogICAgfSwKICAgIHVwZGF0ZUtleUNvZGVXaXRoTnVtYmVyOiBmdW5jdGlvbiB1cGRhdGVLZXlDb2RlV2l0aE51bWJlcihldnQpIHsKICAgICAgdGhpcy5vcHRpb25zLmNvZGUua2V5Q29kZSA9IHBhcnNlSW50KGV2dC5rZXlDb2RlLCAxMCk7CiAgICAgIHRoaXMuc2F2ZSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/coryhack/repSteps-recorder/src/options/OptionsApp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <main class=\"bg-gray-lightest flex py-9 w-full h-screen overflow-auto dark:bg-black\">\n    <div class=\"flex flex-col w-1/4 pt-12 pr-6\">\n      <a href=\"#\" target=\"_blank\">Docs</a>\n      <a href=\"#\" target=\"_blank\">GitHub</a>\n      <a href=\"#\">Release notes</a>\n      <a href=\"#\" target=\"_blank\">Chrome Web Store</a>\n    </div>\n    <div class=\"flex flex-col w-1/2\">\n      <header class=\"flex flex-row justify-between items-center mb-3.5\">\n        <div class=\"flex items-baseline\">\n          <h1 class=\"text-blue text-2xl font-bold mr-1\">\n            Replication Steps Recorder\n          </h1>\n          <span class=\"text-gray-dark dark:text-gray-light text-sm\">v{{ version }}</span>\n        </div>\n        <span\n          role=\"alert\"\n          class=\"text-gray-darkest dark:text-white text-base font-semibold\"\n          v-show=\"saving\"\n          >Saving...</span\n        >\n      </header>\n\n      <section>\n        <h2>Recorder</h2>\n        <label for=\"custom-data-attribute\">Custom data attribute</label>\n        <div class=\"mb-6\">\n          <!-- <input\n            id=\"custom-data-attribute\"\n            class=\"w-full placeholder-gray-darkish bg-gray-lighter h-7 rounded px-2 mb-2 text-sm\"\n            type=\"text\"\n            v-model.trim=\"options.code.dataAttribute\"\n            @change=\"save\"\n            placeholder=\"your custom data-* attribute\"\n          /> -->\n          <p>\n            Define an attribute that we'll attempt to use when selecting the elements, i.e\n            \"data-custom\". This is handy when React or Vue based apps generate random class names.\n          </p>\n          <p>\n            <span role=\"img\" aria-label=\"siren\">🚨</span>\n            <span class=\"ml-1 font-bold text-black-shady dark:text-white\"\n              >When <span class=\"italic\">\"custom data attribute\"</span>&nbsp; is set, it will take\n              precedence from over any other selector (even ID)\n            </span>\n          </p>\n        </div>\n        <div>\n          <label>Set key code</label>\n          <div class=\"mb-2\">\n            <Button @click=\"listenForKeyCodePress\" class=\"font-semibold text-white text-sm\">\n              {{ recordingKeyCodePress ? 'Capturing...' : 'Record Key Stroke' }}\n            </Button>\n            <span class=\"text-gray-dark dark:text-gray-light text-sm ml-3\">\n              {{ options.code.keyCode }}\n            </span>\n          </div>\n          <p>\n            What key will be used for capturing input changes. The value here is the key code. This\n            will not handle multiple keys.\n          </p>\n        </div>\n      </section>\n\n      <section>\n        <h2>Generator</h2>\n        <!-- <Toggle v-model=\"options.code.waitForSelectorOnClick\">\n          Add <code>waitForSelector</code> lines before every\n          <code>page.click()</code>\n        </Toggle> -->\n        <Toggle v-model=\"options.code.blankLinesBetweenBlocks\">\n          Add blank lines between code blocks\n        </Toggle>\n      </section>\n\n      <section>\n        <h2 class=\"\">Extension</h2>\n        <Toggle v-model=\"options.extension.darkMode\">\n          Use Dark Mode {{ options.extension.darkMode }}\n        </Toggle>\n        <!-- <Toggle v-model=\"options.extension.telemetry\">\n          Allow recording of usage telemetry\n        </Toggle> -->\n        <p>\n          We only record clicks for basic product development, no website content or input data.\n          Data is never, ever shared with 3rd parties.\n        </p>\n      </section>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { version } from '../../package.json'\n\nimport storage from '@/services/storage'\nimport { isDarkMode } from '@/services/constants'\nimport { defaults as code } from '@/modules/code-generator/base-generator'\nimport { merge } from 'lodash'\n\nimport Button from '@/components/Button'\nimport Toggle from '@/components/Toggle'\n\nconst defaultOptions = {\n  code,\n  extension: {\n    // telemetry: true,\n    darkMode: isDarkMode(),\n  },\n}\n\nexport default {\n  name: 'OptionsApp',\n  components: { Toggle, Button },\n\n  data() {\n    return {\n      version,\n      loading: true,\n      saving: false,\n      options: defaultOptions,\n      recordingKeyCodePress: false,\n    }\n  },\n\n  watch: {\n    options: {\n      handler() {\n        this.save()\n      },\n      deep: true,\n    },\n\n    'options.extension.darkMode': {\n      handler(newVal) {\n        document.body.classList[newVal ? 'add' : 'remove']('dark')\n      },\n      immediate: true,\n    },\n  },\n\n  mounted() {\n    this.load()\n    chrome.storage.onChanged.addListener(({ options = null }) => {\n      if (options && options.newValue.extension.darkMode !== this.options.extension.darkMode) {\n        this.options.extension.darkMode = options.newValue.extension.darkMode\n      }\n    })\n  },\n\n  methods: {\n    async save() {\n      this.saving = true\n      await storage.set({ options: this.options })\n\n      setTimeout(() => (this.saving = false), 500)\n    },\n\n    async load() {\n      const { options } = await storage.get('options')\n      merge(defaultOptions, options)\n      this.options = Object.assign({}, this.options, defaultOptions)\n\n      this.loading = false\n    },\n\n    listenForKeyCodePress() {\n      this.recordingKeyCodePress = true\n\n      const keyDownFunction = e => {\n        this.recordingKeyCodePress = false\n        this.updateKeyCodeWithNumber(e)\n        window.removeEventListener('keydown', keyDownFunction, false)\n        e.preventDefault()\n      }\n\n      window.addEventListener('keydown', keyDownFunction, false)\n    },\n\n    updateKeyCodeWithNumber(evt) {\n      this.options.code.keyCode = parseInt(evt.keyCode, 10)\n      this.save()\n    },\n  },\n}\n</script>\n\n<style scoped>\nbody {\n  background: #f9fafc;\n  height: 100vh;\n}\n\nbody.dark {\n  background: #161616;\n}\n\ncode {\n  @apply font-semibold;\n}\n\na {\n  @apply text-blue underline text-sm text-right;\n}\n\nh2 {\n  @apply text-gray-darkish text-xl font-semibold mb-5 dark:text-gray-light;\n}\n\nlabel {\n  color: #000;\n  @apply font-semibold text-sm mb-2 block dark:text-gray-lightest;\n}\n\nsection {\n  @apply bg-white border-gray-light border border-solid rounded-md p-4 pb-10 mb-6 dark:bg-black-shady dark:border-gray-dark;\n}\n\np {\n  @apply text-gray-darkish text-xs mb-2 dark:text-white;\n}\n</style>\n"],"sourceRoot":""}]}