{"remainingRequest":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js!/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/repSteps-recorder/node_modules/eslint-loader/index.js??ref--13-0!/Users/coryhack/repSteps-recorder/src/modules/recorder/index.js","dependencies":[{"path":"/Users/coryhack/repSteps-recorder/src/modules/recorder/index.js","mtime":1644415012959},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js","mtime":1643048371203},{"path":"/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/repSteps-recorder/node_modules/eslint-loader/index.js","mtime":1643048371599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvY29yeWhhY2svcmVwU3RlcHMtcmVjb3JkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvY29yeWhhY2svcmVwU3RlcHMtcmVjb3JkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBnZXRTZWxlY3RvciBmcm9tICdAL3NlcnZpY2VzL3NlbGVjdG9yJzsKaW1wb3J0IHsgcmVjb3JkaW5nQ29udHJvbHMgfSBmcm9tICdAL3NlcnZpY2VzL2NvbnN0YW50cyc7CmltcG9ydCB7IG92ZXJsYXlTZWxlY3RvcnMgfSBmcm9tICdAL21vZHVsZXMvb3ZlcmxheS9jb25zdGFudHMnOwppbXBvcnQgeyBldmVudHNUb1JlY29yZCB9IGZyb20gJ0AvbW9kdWxlcy9jb2RlLWdlbmVyYXRvci9jb25zdGFudHMnOwoKdmFyIFJlY29yZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBSZWNvcmRlcihfcmVmKSB7CiAgICB2YXIgc3RvcmUgPSBfcmVmLnN0b3JlOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWNvcmRlcik7CgogICAgdGhpcy5fZXZlbnRMb2cgPSBbXTsKICAgIHRoaXMuX3ByZXZpb3VzRXZlbnQgPSBudWxsOwogICAgdGhpcy5faXNUb3BGcmFtZSA9IHdpbmRvdy5sb2NhdGlvbiA9PT0gd2luZG93LnBhcmVudC5sb2NhdGlvbjsKICAgIHRoaXMuX2lzUmVjb3JkaW5nQ2xpY2tzID0gdHJ1ZTsKICAgIHRoaXMuc3RvcmUgPSBzdG9yZTsKICB9CgogIF9jcmVhdGVDbGFzcyhSZWNvcmRlciwgW3sKICAgIGtleTogImluaXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoY2IpIHsKICAgICAgdmFyIF9jaHJvbWUkcnVudGltZTsKCiAgICAgIHZhciBldmVudHMgPSBPYmplY3QudmFsdWVzKGV2ZW50c1RvUmVjb3JkKTsKCiAgICAgIGlmICghd2luZG93LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzKSB7CiAgICAgICAgdGhpcy5fYWRkQWxsTGlzdGVuZXJzKGV2ZW50cyk7CgogICAgICAgIGNiICYmIGNiKCk7CiAgICAgICAgd2luZG93LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzID0gdHJ1ZTsKICAgICAgfQoKICAgICAgaWYgKCF3aW5kb3cuZG9jdW1lbnQucHB0UmVjb3JkZXJBZGRlZENvbnRyb2xMaXN0ZW5lcnMgJiYgKF9jaHJvbWUkcnVudGltZSA9IGNocm9tZS5ydW50aW1lKSAhPT0gbnVsbCAmJiBfY2hyb21lJHJ1bnRpbWUgIT09IHZvaWQgMCAmJiBfY2hyb21lJHJ1bnRpbWUub25NZXNzYWdlKSB7CiAgICAgICAgd2luZG93LmRvY3VtZW50LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzID0gdHJ1ZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuX2lzVG9wRnJhbWUpIHsKICAgICAgICB0aGlzLl9zZW5kTWVzc2FnZSh7CiAgICAgICAgICBjb250cm9sOiByZWNvcmRpbmdDb250cm9scy5FVkVOVF9SRUNPUkRFUl9TVEFSVEVECiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuX3NlbmRNZXNzYWdlKHsKICAgICAgICAgIGNvbnRyb2w6IHJlY29yZGluZ0NvbnRyb2xzLkdFVF9DVVJSRU5UX1VSTCwKICAgICAgICAgIGhyZWY6IHdpbmRvdy5sb2NhdGlvbi5ocmVmCiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuX3NlbmRNZXNzYWdlKHsKICAgICAgICAgIGNvbnRyb2w6IHJlY29yZGluZ0NvbnRyb2xzLkdFVF9WSUVXUE9SVF9TSVpFLAogICAgICAgICAgY29vcmRpbmF0ZXM6IHsKICAgICAgICAgICAgd2luZG93V2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLAogICAgICAgICAgICB3aW5kb3dIZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCwKICAgICAgICAgICAgYnJvd3NlclZlbmRvcjogd2luZG93Lm5hdmlnYXRvci52ZW5kb3IKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogIl9hZGRBbGxMaXN0ZW5lcnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9hZGRBbGxMaXN0ZW5lcnMoZXZlbnRzKSB7CiAgICAgIHZhciBib3VuZGVkUmVjb3JkRXZlbnQgPSB0aGlzLl9yZWNvcmRFdmVudC5iaW5kKHRoaXMpOwoKICAgICAgZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICByZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgYm91bmRlZFJlY29yZEV2ZW50LCB0cnVlKTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX3NlbmRNZXNzYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfc2VuZE1lc3NhZ2UobXNnKSB7CiAgICAgIC8vIGZpbHRlciBtZXNzYWdlcyBiYXNlZCBvbiBlbmFibGVkIC8gZGlzYWJsZWQgZmVhdHVyZXMKICAgICAgaWYgKG1zZy5hY3Rpb24gPT09ICdjbGljaycgJiYgIXRoaXMuX2lzUmVjb3JkaW5nQ2xpY2tzKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIHZhciBfY2hyb21lLCBfY2hyb21lJHJ1bnRpbWUyOwoKICAgICAgICBjaHJvbWUucnVudGltZSAmJiAoX2Nocm9tZSA9IGNocm9tZSkgIT09IG51bGwgJiYgX2Nocm9tZSAhPT0gdm9pZCAwICYmIChfY2hyb21lJHJ1bnRpbWUyID0gX2Nocm9tZS5ydW50aW1lKSAhPT0gbnVsbCAmJiBfY2hyb21lJHJ1bnRpbWUyICE9PSB2b2lkIDAgJiYgX2Nocm9tZSRydW50aW1lMi5vbk1lc3NhZ2UgPyBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShtc2cpIDogdGhpcy5fZXZlbnRMb2cucHVzaChtc2cpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmRlYnVnKCdjYXVnaHQgZXJyb3InLCBlcnIpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiX3JlY29yZEV2ZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfcmVjb3JkRXZlbnQoZSkgewogICAgICBpZiAodGhpcy5fcHJldmlvdXNFdmVudCAmJiB0aGlzLl9wcmV2aW91c0V2ZW50LnRpbWVTdGFtcCA9PT0gZS50aW1lU3RhbXApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX3ByZXZpb3VzRXZlbnQgPSBlOyAvLyB3ZSBleHBsaWNpdGx5IGNhdGNoIGFueSBlcnJvcnMgYW5kIHN3YWxsb3cgdGhlbSwgYXMgbm9uZSBub2RlLXR5cGUgZXZlbnRzIGFyZSBhbHNvIGluZ2VzdGVkLgogICAgICAvLyBmb3IgdGhlc2UgZXZlbnRzIHdlIGNhbm5vdCBnZW5lcmF0ZSBzZWxlY3RvcnMsIHdoaWNoIGlzIE9LCgogICAgICB0cnkgewogICAgICAgIHZhciBzZWxlY3RvciA9IGdldFNlbGVjdG9yKGUsIHsKICAgICAgICAgIGRhdGFBdHRyaWJ1dGU6IHRoaXMuc3RvcmUuc3RhdGUuZGF0YUF0dHJpYnV0ZQogICAgICAgIH0pOwoKICAgICAgICBpZiAoc2VsZWN0b3IuaW5jbHVkZXMoJyMnICsgb3ZlcmxheVNlbGVjdG9ycy5PVkVSTEFZX0lEKSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5zdG9yZS5jb21taXQoJ3Nob3dSZWNvcmRlZCcpOwoKICAgICAgICB0aGlzLl9zZW5kTWVzc2FnZSh7CiAgICAgICAgICB0ZXh0OiBlLnRhcmdldC5vdXRlclRleHQgPyBlLnRhcmdldC5vdXRlclRleHQgOiBudWxsLAogICAgICAgICAgc2VsZWN0b3I6IHNlbGVjdG9yLAogICAgICAgICAgdmFsdWU6IGUudGFyZ2V0LnZhbHVlLAogICAgICAgICAgdGFnTmFtZTogZS50YXJnZXQudGFnTmFtZSwKICAgICAgICAgIGFjdGlvbjogZS50eXBlLAogICAgICAgICAga2V5Q29kZTogZS5rZXlDb2RlID8gZS5rZXlDb2RlIDogbnVsbCwKICAgICAgICAgIGhyZWY6IGUudGFyZ2V0LmhyZWYgPyBlLnRhcmdldC5ocmVmIDogbnVsbCwKICAgICAgICAgIGNvb3JkaW5hdGVzOiBSZWNvcmRlci5fZ2V0Q29vcmRpbmF0ZXMoZSkKICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiX2dldEV2ZW50TG9nIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0RXZlbnRMb2coKSB7CiAgICAgIHJldHVybiB0aGlzLl9ldmVudExvZzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfY2xlYXJFdmVudExvZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2NsZWFyRXZlbnRMb2coKSB7CiAgICAgIHRoaXMuX2V2ZW50TG9nID0gW107CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzYWJsZUNsaWNrUmVjb3JkaW5nIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNhYmxlQ2xpY2tSZWNvcmRpbmcoKSB7CiAgICAgIHRoaXMuX2lzUmVjb3JkaW5nQ2xpY2tzID0gZmFsc2U7CiAgICB9CiAgfSwgewogICAga2V5OiAiZW5hYmxlQ2xpY2tSZWNvcmRpbmciLAogICAgdmFsdWU6IGZ1bmN0aW9uIGVuYWJsZUNsaWNrUmVjb3JkaW5nKCkgewogICAgICB0aGlzLl9pc1JlY29yZGluZ0NsaWNrcyA9IHRydWU7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJfZ2V0Q29vcmRpbmF0ZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRDb29yZGluYXRlcyhldnQpIHsKICAgICAgdmFyIGV2ZW50c1dpdGhDb29yZGluYXRlcyA9IHsKICAgICAgICBtb3VzZXVwOiB0cnVlLAogICAgICAgIG1vdXNlZG93bjogdHJ1ZSwKICAgICAgICBtb3VzZW1vdmU6IHRydWUsCiAgICAgICAgbW91c2VvdmVyOiB0cnVlCiAgICAgIH07CiAgICAgIHJldHVybiBldmVudHNXaXRoQ29vcmRpbmF0ZXNbZXZ0LnR5cGVdID8gewogICAgICAgIHg6IGV2dC5jbGllbnRYLAogICAgICAgIHk6IGV2dC5jbGllbnRZCiAgICAgIH0gOiBudWxsOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFJlY29yZGVyOwp9KCk7CgpleHBvcnQgeyBSZWNvcmRlciBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/Users/coryhack/repSteps-recorder/src/modules/recorder/index.js"],"names":["getSelector","recordingControls","overlaySelectors","eventsToRecord","Recorder","store","_eventLog","_previousEvent","_isTopFrame","window","location","parent","_isRecordingClicks","cb","events","Object","values","pptRecorderAddedControlListeners","_addAllListeners","document","chrome","runtime","onMessage","_sendMessage","control","EVENT_RECORDER_STARTED","GET_CURRENT_URL","href","GET_VIEWPORT_SIZE","coordinates","windowWidth","innerWidth","windowHeight","innerHeight","browserVendor","navigator","vendor","boundedRecordEvent","_recordEvent","bind","forEach","type","addEventListener","msg","action","sendMessage","push","err","console","debug","e","timeStamp","selector","dataAttribute","state","includes","OVERLAY_ID","commit","text","target","outerText","value","tagName","keyCode","_getCoordinates","error","evt","eventsWithCoordinates","mouseup","mousedown","mousemove","mouseover","x","clientX","y","clientY"],"mappings":"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","sourcesContent":["import getSelector from '@/services/selector'\nimport { recordingControls } from '@/services/constants'\nimport { overlaySelectors } from '@/modules/overlay/constants'\nimport { eventsToRecord } from '@/modules/code-generator/constants'\n\nexport default class Recorder {\n  constructor({ store }) {\n    this._eventLog = []\n    this._previousEvent = null\n\n    this._isTopFrame = window.location === window.parent.location\n    this._isRecordingClicks = true\n\n    this.store = store\n  }\n\n  init(cb) {\n    const events = Object.values(eventsToRecord)\n\n    if (!window.pptRecorderAddedControlListeners) {\n      this._addAllListeners(events)\n      cb && cb()\n      window.pptRecorderAddedControlListeners = true\n    }\n\n    if (!window.document.pptRecorderAddedControlListeners && chrome.runtime?.onMessage) {\n      window.document.pptRecorderAddedControlListeners = true\n    }\n\n    if (this._isTopFrame) {\n      this._sendMessage({ control: recordingControls.EVENT_RECORDER_STARTED })\n      this._sendMessage({ control: recordingControls.GET_CURRENT_URL, href: window.location.href })\n      this._sendMessage({\n        control: recordingControls.GET_VIEWPORT_SIZE,\n        coordinates: {\n          windowWidth: window.innerWidth,\n          windowHeight: window.innerHeight,\n          browserVendor: window.navigator.vendor,\n        },\n      })\n    }\n  }\n\n  _addAllListeners(events) {\n    const boundedRecordEvent = this._recordEvent.bind(this)\n    events.forEach(type => window.addEventListener(type, boundedRecordEvent, true))\n  }\n\n  _sendMessage(msg) {\n    // filter messages based on enabled / disabled features\n    if (msg.action === 'click' && !this._isRecordingClicks) {\n      return\n    }\n\n    try {\n      chrome.runtime && chrome?.runtime?.onMessage\n        ? chrome.runtime.sendMessage(msg)\n        : this._eventLog.push(msg)\n    } catch (err) {\n      console.debug('caught error', err)\n    }\n  }\n\n  _recordEvent(e) {\n    if (this._previousEvent && this._previousEvent.timeStamp === e.timeStamp) {\n      return\n    }\n    this._previousEvent = e\n\n    // we explicitly catch any errors and swallow them, as none node-type events are also ingested.\n    // for these events we cannot generate selectors, which is OK\n    try {\n      const selector = getSelector(e, { dataAttribute: this.store.state.dataAttribute })\n\n      if (selector.includes('#' + overlaySelectors.OVERLAY_ID)) {\n        return\n      }\n\n      this.store.commit('showRecorded')\n\n      this._sendMessage({\n        text: e.target.outerText ? e.target.outerText : null,\n        selector,\n        value: e.target.value,\n        tagName: e.target.tagName,\n        action: e.type,\n        keyCode: e.keyCode ? e.keyCode : null,\n        href: e.target.href ? e.target.href : null,\n        coordinates: Recorder._getCoordinates(e),\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  _getEventLog() {\n    return this._eventLog\n  }\n\n  _clearEventLog() {\n    this._eventLog = []\n  }\n\n  disableClickRecording() {\n    this._isRecordingClicks = false\n  }\n\n  enableClickRecording() {\n    this._isRecordingClicks = true\n  }\n\n  static _getCoordinates(evt) {\n    const eventsWithCoordinates = {\n      mouseup: true,\n      mousedown: true,\n      mousemove: true,\n      mouseover: true,\n    }\n\n    return eventsWithCoordinates[evt.type] ? { x: evt.clientX, y: evt.clientY } : null\n  }\n}\n"]}]}