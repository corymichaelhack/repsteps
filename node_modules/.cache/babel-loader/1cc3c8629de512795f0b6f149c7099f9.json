{"remainingRequest":"/Users/coryhack/headless-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/headless-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/coryhack/headless-recorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/coryhack/headless-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/coryhack/headless-recorder/src/options/OptionsApp.vue?vue&type=template&id=a115cf26&scoped=true","dependencies":[{"path":"/Users/coryhack/headless-recorder/src/options/OptionsApp.vue","mtime":1644510201202},{"path":"/Users/coryhack/headless-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/headless-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/headless-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643048377068},{"path":"/Users/coryhack/headless-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/headless-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1643048376026}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}