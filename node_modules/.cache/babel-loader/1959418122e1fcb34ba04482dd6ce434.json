{"remainingRequest":"/Users/coryhack/headless-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/headless-recorder/node_modules/eslint-loader/index.js??ref--13-0!/Users/coryhack/headless-recorder/src/modules/recorder/index.js","dependencies":[{"path":"/Users/coryhack/headless-recorder/src/modules/recorder/index.js","mtime":1644415012959},{"path":"/Users/coryhack/headless-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/headless-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/headless-recorder/node_modules/eslint-loader/index.js","mtime":1643048371599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvY29yeWhhY2svaGVhZGxlc3MtcmVjb3JkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvY29yeWhhY2svaGVhZGxlc3MtcmVjb3JkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBnZXRTZWxlY3RvciBmcm9tICdAL3NlcnZpY2VzL3NlbGVjdG9yJzsKaW1wb3J0IHsgcmVjb3JkaW5nQ29udHJvbHMgfSBmcm9tICdAL3NlcnZpY2VzL2NvbnN0YW50cyc7CmltcG9ydCB7IG92ZXJsYXlTZWxlY3RvcnMgfSBmcm9tICdAL21vZHVsZXMvb3ZlcmxheS9jb25zdGFudHMnOwppbXBvcnQgeyBldmVudHNUb1JlY29yZCB9IGZyb20gJ0AvbW9kdWxlcy9jb2RlLWdlbmVyYXRvci9jb25zdGFudHMnOwoKdmFyIFJlY29yZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBSZWNvcmRlcihfcmVmKSB7CiAgICB2YXIgc3RvcmUgPSBfcmVmLnN0b3JlOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWNvcmRlcik7CgogICAgdGhpcy5fZXZlbnRMb2cgPSBbXTsKICAgIHRoaXMuX3ByZXZpb3VzRXZlbnQgPSBudWxsOwogICAgdGhpcy5faXNUb3BGcmFtZSA9IHdpbmRvdy5sb2NhdGlvbiA9PT0gd2luZG93LnBhcmVudC5sb2NhdGlvbjsKICAgIHRoaXMuX2lzUmVjb3JkaW5nQ2xpY2tzID0gdHJ1ZTsKICAgIHRoaXMuc3RvcmUgPSBzdG9yZTsKICB9CgogIF9jcmVhdGVDbGFzcyhSZWNvcmRlciwgW3sKICAgIGtleTogImluaXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoY2IpIHsKICAgICAgdmFyIF9jaHJvbWUkcnVudGltZTsKCiAgICAgIHZhciBldmVudHMgPSBPYmplY3QudmFsdWVzKGV2ZW50c1RvUmVjb3JkKTsKCiAgICAgIGlmICghd2luZG93LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzKSB7CiAgICAgICAgdGhpcy5fYWRkQWxsTGlzdGVuZXJzKGV2ZW50cyk7CgogICAgICAgIGNiICYmIGNiKCk7CiAgICAgICAgd2luZG93LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzID0gdHJ1ZTsKICAgICAgfQoKICAgICAgaWYgKCF3aW5kb3cuZG9jdW1lbnQucHB0UmVjb3JkZXJBZGRlZENvbnRyb2xMaXN0ZW5lcnMgJiYgKF9jaHJvbWUkcnVudGltZSA9IGNocm9tZS5ydW50aW1lKSAhPT0gbnVsbCAmJiBfY2hyb21lJHJ1bnRpbWUgIT09IHZvaWQgMCAmJiBfY2hyb21lJHJ1bnRpbWUub25NZXNzYWdlKSB7CiAgICAgICAgd2luZG93LmRvY3VtZW50LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzID0gdHJ1ZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuX2lzVG9wRnJhbWUpIHsKICAgICAgICB0aGlzLl9zZW5kTWVzc2FnZSh7CiAgICAgICAgICBjb250cm9sOiByZWNvcmRpbmdDb250cm9scy5FVkVOVF9SRUNPUkRFUl9TVEFSVEVECiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuX3NlbmRNZXNzYWdlKHsKICAgICAgICAgIGNvbnRyb2w6IHJlY29yZGluZ0NvbnRyb2xzLkdFVF9DVVJSRU5UX1VSTCwKICAgICAgICAgIGhyZWY6IHdpbmRvdy5sb2NhdGlvbi5ocmVmCiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuX3NlbmRNZXNzYWdlKHsKICAgICAgICAgIGNvbnRyb2w6IHJlY29yZGluZ0NvbnRyb2xzLkdFVF9WSUVXUE9SVF9TSVpFLAogICAgICAgICAgY29vcmRpbmF0ZXM6IHsKICAgICAgICAgICAgd2luZG93V2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLAogICAgICAgICAgICB3aW5kb3dIZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCwKICAgICAgICAgICAgYnJvd3NlclZlbmRvcjogd2luZG93Lm5hdmlnYXRvci52ZW5kb3IKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogIl9hZGRBbGxMaXN0ZW5lcnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9hZGRBbGxMaXN0ZW5lcnMoZXZlbnRzKSB7CiAgICAgIHZhciBib3VuZGVkUmVjb3JkRXZlbnQgPSB0aGlzLl9yZWNvcmRFdmVudC5iaW5kKHRoaXMpOwoKICAgICAgZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICByZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgYm91bmRlZFJlY29yZEV2ZW50LCB0cnVlKTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX3NlbmRNZXNzYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfc2VuZE1lc3NhZ2UobXNnKSB7CiAgICAgIC8vIGZpbHRlciBtZXNzYWdlcyBiYXNlZCBvbiBlbmFibGVkIC8gZGlzYWJsZWQgZmVhdHVyZXMKICAgICAgaWYgKG1zZy5hY3Rpb24gPT09ICdjbGljaycgJiYgIXRoaXMuX2lzUmVjb3JkaW5nQ2xpY2tzKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIHZhciBfY2hyb21lLCBfY2hyb21lJHJ1bnRpbWUyOwoKICAgICAgICBjaHJvbWUucnVudGltZSAmJiAoX2Nocm9tZSA9IGNocm9tZSkgIT09IG51bGwgJiYgX2Nocm9tZSAhPT0gdm9pZCAwICYmIChfY2hyb21lJHJ1bnRpbWUyID0gX2Nocm9tZS5ydW50aW1lKSAhPT0gbnVsbCAmJiBfY2hyb21lJHJ1bnRpbWUyICE9PSB2b2lkIDAgJiYgX2Nocm9tZSRydW50aW1lMi5vbk1lc3NhZ2UgPyBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShtc2cpIDogdGhpcy5fZXZlbnRMb2cucHVzaChtc2cpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmRlYnVnKCdjYXVnaHQgZXJyb3InLCBlcnIpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiX3JlY29yZEV2ZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfcmVjb3JkRXZlbnQoZSkgewogICAgICBpZiAodGhpcy5fcHJldmlvdXNFdmVudCAmJiB0aGlzLl9wcmV2aW91c0V2ZW50LnRpbWVTdGFtcCA9PT0gZS50aW1lU3RhbXApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX3ByZXZpb3VzRXZlbnQgPSBlOyAvLyB3ZSBleHBsaWNpdGx5IGNhdGNoIGFueSBlcnJvcnMgYW5kIHN3YWxsb3cgdGhlbSwgYXMgbm9uZSBub2RlLXR5cGUgZXZlbnRzIGFyZSBhbHNvIGluZ2VzdGVkLgogICAgICAvLyBmb3IgdGhlc2UgZXZlbnRzIHdlIGNhbm5vdCBnZW5lcmF0ZSBzZWxlY3RvcnMsIHdoaWNoIGlzIE9LCgogICAgICB0cnkgewogICAgICAgIHZhciBzZWxlY3RvciA9IGdldFNlbGVjdG9yKGUsIHsKICAgICAgICAgIGRhdGFBdHRyaWJ1dGU6IHRoaXMuc3RvcmUuc3RhdGUuZGF0YUF0dHJpYnV0ZQogICAgICAgIH0pOwoKICAgICAgICBpZiAoc2VsZWN0b3IuaW5jbHVkZXMoJyMnICsgb3ZlcmxheVNlbGVjdG9ycy5PVkVSTEFZX0lEKSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5zdG9yZS5jb21taXQoJ3Nob3dSZWNvcmRlZCcpOwoKICAgICAgICB0aGlzLl9zZW5kTWVzc2FnZSh7CiAgICAgICAgICB0ZXh0OiBlLnRhcmdldC5vdXRlclRleHQgPyBlLnRhcmdldC5vdXRlclRleHQgOiBudWxsLAogICAgICAgICAgc2VsZWN0b3I6IHNlbGVjdG9yLAogICAgICAgICAgdmFsdWU6IGUudGFyZ2V0LnZhbHVlLAogICAgICAgICAgdGFnTmFtZTogZS50YXJnZXQudGFnTmFtZSwKICAgICAgICAgIGFjdGlvbjogZS50eXBlLAogICAgICAgICAga2V5Q29kZTogZS5rZXlDb2RlID8gZS5rZXlDb2RlIDogbnVsbCwKICAgICAgICAgIGhyZWY6IGUudGFyZ2V0LmhyZWYgPyBlLnRhcmdldC5ocmVmIDogbnVsbCwKICAgICAgICAgIGNvb3JkaW5hdGVzOiBSZWNvcmRlci5fZ2V0Q29vcmRpbmF0ZXMoZSkKICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiX2dldEV2ZW50TG9nIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZ2V0RXZlbnRMb2coKSB7CiAgICAgIHJldHVybiB0aGlzLl9ldmVudExvZzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfY2xlYXJFdmVudExvZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2NsZWFyRXZlbnRMb2coKSB7CiAgICAgIHRoaXMuX2V2ZW50TG9nID0gW107CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzYWJsZUNsaWNrUmVjb3JkaW5nIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkaXNhYmxlQ2xpY2tSZWNvcmRpbmcoKSB7CiAgICAgIHRoaXMuX2lzUmVjb3JkaW5nQ2xpY2tzID0gZmFsc2U7CiAgICB9CiAgfSwgewogICAga2V5OiAiZW5hYmxlQ2xpY2tSZWNvcmRpbmciLAogICAgdmFsdWU6IGZ1bmN0aW9uIGVuYWJsZUNsaWNrUmVjb3JkaW5nKCkgewogICAgICB0aGlzLl9pc1JlY29yZGluZ0NsaWNrcyA9IHRydWU7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJfZ2V0Q29vcmRpbmF0ZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRDb29yZGluYXRlcyhldnQpIHsKICAgICAgdmFyIGV2ZW50c1dpdGhDb29yZGluYXRlcyA9IHsKICAgICAgICBtb3VzZXVwOiB0cnVlLAogICAgICAgIG1vdXNlZG93bjogdHJ1ZSwKICAgICAgICBtb3VzZW1vdmU6IHRydWUsCiAgICAgICAgbW91c2VvdmVyOiB0cnVlCiAgICAgIH07CiAgICAgIHJldHVybiBldmVudHNXaXRoQ29vcmRpbmF0ZXNbZXZ0LnR5cGVdID8gewogICAgICAgIHg6IGV2dC5jbGllbnRYLAogICAgICAgIHk6IGV2dC5jbGllbnRZCiAgICAgIH0gOiBudWxsOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFJlY29yZGVyOwp9KCk7CgpleHBvcnQgeyBSZWNvcmRlciBhcyBkZWZhdWx0IH07"},null]}