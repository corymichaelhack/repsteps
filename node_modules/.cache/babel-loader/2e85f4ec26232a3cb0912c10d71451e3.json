{"remainingRequest":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js!/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/repSteps-recorder/node_modules/eslint-loader/index.js??ref--13-0!/Users/coryhack/repSteps-recorder/src/services/storage.js","dependencies":[{"path":"/Users/coryhack/repSteps-recorder/src/services/storage.js","mtime":1642800781941},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js","mtime":1643048371203},{"path":"/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/repSteps-recorder/node_modules/eslint-loader/index.js","mtime":1643048371599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXQ6IGZ1bmN0aW9uIGdldChrZXlzKSB7CiAgICBpZiAoIWNocm9tZS5zdG9yYWdlIHx8ICFjaHJvbWUuc3RvcmFnZS5sb2NhbCkgewogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0Jyb3dzZXIgc3RvcmFnZSBub3QgYXZhaWxhYmxlJyk7CiAgICB9CgogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgIHJldHVybiBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoa2V5cywgZnVuY3Rpb24gKHByb3BzKSB7CiAgICAgICAgcmV0dXJuIHJlc29sdmUocHJvcHMpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgc2V0OiBmdW5jdGlvbiBzZXQocHJvcHMpIHsKICAgIGlmICghY2hyb21lLnN0b3JhZ2UgfHwgIWNocm9tZS5zdG9yYWdlLmxvY2FsKSB7CiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQnJvd3NlciBzdG9yYWdlIG5vdCBhdmFpbGFibGUnKTsKICAgIH0KCiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgcmV0dXJuIGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldChwcm9wcywgZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXNvbHZlKHJlcyk7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShrZXlzKSB7CiAgICBpZiAoIWNocm9tZS5zdG9yYWdlIHx8ICFjaHJvbWUuc3RvcmFnZS5sb2NhbCkgewogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0Jyb3dzZXIgc3RvcmFnZSBub3QgYXZhaWxhYmxlJyk7CiAgICB9CgogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgIHJldHVybiBjaHJvbWUuc3RvcmFnZS5sb2NhbC5yZW1vdmUoa2V5cywgZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXNvbHZlKHJlcyk7CiAgICAgIH0pOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/coryhack/repSteps-recorder/src/services/storage.js"],"names":["get","keys","chrome","storage","local","Promise","reject","resolve","props","set","res","remove"],"mappings":";AAAA,eAAe;AACbA,EAAAA,GADa,eACTC,IADS,EACH;AACR,QAAI,CAACC,MAAM,CAACC,OAAR,IAAmB,CAACD,MAAM,CAACC,OAAP,CAAeC,KAAvC,EAA8C;AAC5C,aAAOC,OAAO,CAACC,MAAR,CAAe,+BAAf,CAAP;AACD;;AAED,WAAO,IAAID,OAAJ,CAAY,UAAAE,OAAO;AAAA,aAAIL,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBJ,GAArB,CAAyBC,IAAzB,EAA+B,UAAAO,KAAK;AAAA,eAAID,OAAO,CAACC,KAAD,CAAX;AAAA,OAApC,CAAJ;AAAA,KAAnB,CAAP;AACD,GAPY;AASbC,EAAAA,GATa,eASTD,KATS,EASF;AACT,QAAI,CAACN,MAAM,CAACC,OAAR,IAAmB,CAACD,MAAM,CAACC,OAAP,CAAeC,KAAvC,EAA8C;AAC5C,aAAOC,OAAO,CAACC,MAAR,CAAe,+BAAf,CAAP;AACD;;AAED,WAAO,IAAID,OAAJ,CAAY,UAAAE,OAAO;AAAA,aAAIL,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBK,GAArB,CAAyBD,KAAzB,EAAgC,UAAAE,GAAG;AAAA,eAAIH,OAAO,CAACG,GAAD,CAAX;AAAA,OAAnC,CAAJ;AAAA,KAAnB,CAAP;AACD,GAfY;AAiBbC,EAAAA,MAjBa,kBAiBNV,IAjBM,EAiBA;AACX,QAAI,CAACC,MAAM,CAACC,OAAR,IAAmB,CAACD,MAAM,CAACC,OAAP,CAAeC,KAAvC,EAA8C;AAC5C,aAAOC,OAAO,CAACC,MAAR,CAAe,+BAAf,CAAP;AACD;;AAED,WAAO,IAAID,OAAJ,CAAY,UAAAE,OAAO;AAAA,aAAIL,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBO,MAArB,CAA4BV,IAA5B,EAAkC,UAAAS,GAAG;AAAA,eAAIH,OAAO,CAACG,GAAD,CAAX;AAAA,OAArC,CAAJ;AAAA,KAAnB,CAAP;AACD;AAvBY,CAAf","sourcesContent":["export default {\n  get(keys) {\n    if (!chrome.storage || !chrome.storage.local) {\n      return Promise.reject('Browser storage not available')\n    }\n\n    return new Promise(resolve => chrome.storage.local.get(keys, props => resolve(props)))\n  },\n\n  set(props) {\n    if (!chrome.storage || !chrome.storage.local) {\n      return Promise.reject('Browser storage not available')\n    }\n\n    return new Promise(resolve => chrome.storage.local.set(props, res => resolve(res)))\n  },\n\n  remove(keys) {\n    if (!chrome.storage || !chrome.storage.local) {\n      return Promise.reject('Browser storage not available')\n    }\n\n    return new Promise(resolve => chrome.storage.local.remove(keys, res => resolve(res)))\n  },\n}\n"]}]}