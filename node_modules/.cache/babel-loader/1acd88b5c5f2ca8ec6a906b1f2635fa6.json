{"remainingRequest":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js!/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js!/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/coryhack/repSteps-recorder/src/modules/overlay/Selector.vue?vue&type=template&id=0e8d3550&scoped=true","dependencies":[{"path":"/Users/coryhack/repSteps-recorder/src/modules/overlay/Selector.vue","mtime":1642800781935},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/thread-loader/dist/cjs.js","mtime":1643048371203},{"path":"/Users/coryhack/repSteps-recorder/node_modules/babel-loader/lib/index.js","mtime":1643048374140},{"path":"/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643048377068},{"path":"/Users/coryhack/repSteps-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1643048371315},{"path":"/Users/coryhack/repSteps-recorder/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1643048376026}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi0wZThkMzU1MCIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMGU4ZDM1NTAiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAib3ZlcmxheSIKfTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAkb3B0aW9ucy5zZWxlY3RvckNsYXNzLAogICAgcmVmOiAic2VsZWN0b3IiCiAgfSwgbnVsbCwgMildKTsKfSk7"},{"version":3,"sources":["/Users/coryhack/repSteps-recorder/src/modules/overlay/Selector.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,KAAK,EAAC;;;;;;uBAAX,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,YAAA,CAAiD,KAAjD,EAAiD;AAA3C,IAAA,KAAK,EAAE,QAAA,CAAA,aAAoC;AAArB,IAAA,GAAG,EAAC;AAAiB,GAAjD,E,IAAA,E,CAAA,CACI,CAFN,C","sourcesContent":["<template>\n  <div class=\"overlay\">\n    <div :class=\"selectorClass\" ref=\"selector\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  data() {\n    return {\n      overlay: null,\n      selector: null,\n      element: null,\n      scrolling: false,\n      dimensions: {},\n    }\n  },\n\n  computed: {\n    ...mapState(['screenshotClippedMode', 'screenshotMode', 'isStopped']),\n\n    selectorClass() {\n      if (this.isStopped) {\n        return ''\n      }\n\n      if (!this.screenshotMode || this.screenshotClippedMode) {\n        return this.scrolling ? 'hide selector' : 'selector'\n      }\n\n      return ''\n    },\n  },\n\n  methods: {\n    move(e, skippedSelectors = []) {\n      if (this.element === e.target) {\n        return\n      }\n\n      this.element = e.target\n\n      if (skippedSelectors.includes(this.element.id)) {\n        return\n      }\n\n      this.dimensions.top = -window.scrollY\n      this.dimensions.left = -window.scrollX\n\n      let elem = e.target\n\n      while (elem && elem !== document.body) {\n        this.dimensions.top += elem.offsetTop\n        this.dimensions.left += elem.offsetLeft\n        elem = elem.offsetParent\n      }\n\n      this.dimensions.width = this.element.offsetWidth + 2\n      this.dimensions.height = this.element.offsetHeight + 2\n\n      this.$refs.selector.style.top = this.dimensions.top - 2 + 'px'\n      this.$refs.selector.style.left = this.dimensions.left - 2 + 'px'\n      this.$refs.selector.style.width = this.dimensions.width + 'px'\n      this.$refs.selector.style.height = this.dimensions.height + 'px'\n    },\n\n    // TODO: Integrate shooter with selector\n    click(e) {\n      setTimeout(() => {\n        let clip = null\n\n        if (this.$refs.selector) {\n          clip = {\n            x: this.$refs.selector.style.left,\n            y: this.$refs.selector.style.top,\n            width: this.$refs.selector.style.width,\n            height: this.$refs.selector.style.height,\n          }\n        }\n\n        this.$emit('click', { clip, raw: e })\n      }, 100)\n    },\n  },\n}\n</script>\n\n<style scoped>\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 2147483646;\n}\n\n.selector {\n  padding: 1px;\n  position: fixed;\n  background: rgba(255, 73, 73, 0.1);\n  border: 2px dashed rgba(255, 73, 73, 0.7);\n}\n\n.hide {\n  display: none;\n}\n</style>\n"],"sourceRoot":""}]}